{"version":3,"sources":["src/index.js"],"names":["formatDate","timestamp","date","Date","hours","getHours","concat","minutes","getMinutes","day","getDay","displayForecast","response","console","log","data","daily","forecastElement","document","querySelector","forecastHTML","forEach","innerHTML","getForecast","coordinates","apiUrl","axios","get","then","displayTemperature","temperatureElement","cityElement","descriptionElement","humidityElement","windElement","dateElement","iconElement","celsiusTemperature","temperature","current","Math","round","city","condition","description","humidity","wind","speed","time","setAttribute","icon","search","handleSubmit","event","preventDefault","value","displayFahrenheitTemperature","fahrenheitTemperature","displayCelsiusTemperature","form","addEventListener","fahrenheitlink","celsiuslink"],"mappings":";AAAA,SAASA,EAAWC,GAClB,IAAIC,EAAO,IAAIC,KAAKF,GAChBG,EAAQF,EAAKG,WACbD,EAAQ,KACVA,EAAKE,IAAAA,OAAOF,IAEd,IAAIG,EAAUL,EAAKM,aACfD,EAAU,KACZA,EAAOD,IAAAA,OAAOC,IAEhB,IAWIE,EAXO,CACT,SACA,SACA,UACA,YACA,WACA,SACA,WACA,UAGaP,EAAKQ,UACpB,MAAAJ,GAAAA,OAAUG,EAAGH,KAAAA,OAAIF,EAAKE,KAAAA,OAAIC,GAG5B,SAASI,EAAgBC,GACvBC,QAAQC,IAAIF,EAASG,KAAKC,OAC1B,IAAIC,EAAkBC,SAASC,cAAc,aAEzCC,EAAkC,oBAC3B,CAAC,MAAO,MAAO,MAAO,OAC5BC,QAAQ,SAAUZ,GACrBW,GACcd,uEAAAA,OAGwBG,EAelC,6XAENW,GAAsC,SACtCH,EAAgBK,UAAYF,EAG9B,SAASG,EAAYC,GACnBX,QAAQC,IAAIU,GACZ,IACIC,EAAqH,6GACzHZ,QAAQC,IAAIW,GACZC,MAAMC,IAAIF,GAAQG,KAAKjB,GAGzB,SAASkB,EAAmBjB,GAC1B,IAAIkB,EAAqBZ,SAASC,cAAc,gBAC5CY,EAAcb,SAASC,cAAc,SACrCa,EAAqBd,SAASC,cAAc,gBAC5Cc,EAAkBf,SAASC,cAAc,aACzCe,EAAchB,SAASC,cAAc,SACrCgB,EAAcjB,SAASC,cAAc,SACrCiB,EAAclB,SAASC,cAAc,SAEzCkB,EAAqBzB,EAASG,KAAKuB,YAAYC,QAC/CT,EAAmBR,UAAYkB,KAAKC,MAAM7B,EAASG,KAAKuB,YAAYC,SACpER,EAAYT,UAAYV,EAASG,KAAK2B,KACtCV,EAAmBV,UAAYV,EAASG,KAAK4B,UAAUC,YACvDX,EAAgBX,UAAYV,EAASG,KAAKuB,YAAYO,SACtDX,EAAYZ,UAAYkB,KAAKC,MAAM7B,EAASG,KAAK+B,KAAKC,OACtDZ,EAAYb,UAAYtB,EAAgC,IAArBY,EAASG,KAAKiC,MACjDZ,EAAYa,aACV,MAAK3C,8DAAAA,OACyDM,EAASG,KAAK4B,UAAUO,KACxF,SACAd,EAAYa,aAAa,OAAQrC,EAASG,KAAK4B,UAAUO,MAEzD3B,EAAYX,EAASG,KAAKS,aAG5B,SAAS2B,EAAOT,GACd,IACIjB,EAAMnB,oDAAAA,OAAuDoC,EAAwD,sDACzHhB,MAAMC,IAAIF,GAAQG,KAAKC,GAGzB,SAASuB,EAAaC,GACpBA,EAAMC,iBAENH,EADuBjC,SAASC,cAAc,eACtBoC,OAG1B,SAASC,EAA6BH,GACpCA,EAAMC,iBACN,IAAIxB,EAAqBZ,SAASC,cAAc,gBAC5CsC,EAA+C,EAArBpB,EAA0B,EAAK,GAC7DP,EAAmBR,UAAYkB,KAAKC,MAAMgB,GAG5C,SAASC,EAA0BL,GACjCA,EAAMC,iBACmBpC,SAASC,cAAc,gBAC7BG,UAAYkB,KAAKC,MAAMJ,GAG5C,IAAIA,EAAqB,KAErBsB,EAAOzC,SAASC,cAAc,gBAClCwC,EAAKC,iBAAiB,SAAUR,GAEhC,IAAIS,EAAiB3C,SAASC,cAAc,oBAC5C0C,EAAeD,iBAAiB,QAASJ,GAEzC,IAAIM,EAAc5C,SAASC,cAAc,iBACzC2C,EAAYF,iBAAiB,QAASF,GAEtCP,EAAO","file":"src.9ba6f8e7.js","sourceRoot":"..","sourcesContent":["function formatDate(timestamp) {\n  let date = new Date(timestamp);\n  let hours = date.getHours();\n  if (hours < 10) {\n    hours = `0${hours}`;\n  }\n  let minutes = date.getMinutes();\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n  let days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n    \"Sunday\"\n  ];\n\n  let day = days[date.getDay()];\n  return `${day} ${hours} ${minutes}`;\n}\n\nfunction displayForecast(response) {\n  console.log(response.data.daily);\n  let forecastElement = document.querySelector(\"#forecast\");\n\n  let forecastHTML = `<div class=\"row\">`;\n  let days = [\"Fri\", \"Sat\", \"Sun\", \"Mon\"];\n  days.forEach(function (day) {\n    forecastHTML =\n      forecastHTML +\n      ` \n    <div class=\"col-2\">\n     <div class=\"weather-forecast-date\">${day}\n     </div>\n     <img \n     src=\"https://ssl.gstatic.com/onebox/weather/64/sunny.png\"\n     alt=\"\"\n     width=\"36\"\n     />\n     <div class=\"weather-forecast-temperature\">\n       <span class=\"weather-forecast-temperature-max\"> 18° </\n       span>\n       <span class=\"weather-forecast-temperature-min\"> 13° </\n       span>\n         </div>\n        </div>\n\n       `;\n  });\n  forecastHTML = forecastHTML + `</div>`;\n  forecastElement.innerHTML = forecastHTML;\n}\n\nfunction getForecast(coordinates) {\n  console.log(coordinates);\n  let apiKey = \"5035a72ff289e3220e2bo711c747t0f5\";\n  let apiUrl = `https://api.shecodes.io/weather/v1/forecast?query=Durban&key=5035a72ff289e3220e2bo711c747t0f5&units=metric`;\n  console.log(apiUrl);\n  axios.get(apiUrl).then(displayForecast);\n}\n\nfunction displayTemperature(response) {\n  let temperatureElement = document.querySelector(\"#temperature\");\n  let cityElement = document.querySelector(\"#city\");\n  let descriptionElement = document.querySelector(\"#description\");\n  let humidityElement = document.querySelector(\"#humidity\");\n  let windElement = document.querySelector(\"#wind\");\n  let dateElement = document.querySelector(\"#date\");\n  let iconElement = document.querySelector(\"#icon\");\n\n  celsiusTemperature = response.data.temperature.current;\n  temperatureElement.innerHTML = Math.round(response.data.temperature.current);\n  cityElement.innerHTML = response.data.city;\n  descriptionElement.innerHTML = response.data.condition.description;\n  humidityElement.innerHTML = response.data.temperature.humidity;\n  windElement.innerHTML = Math.round(response.data.wind.speed);\n  dateElement.innerHTML = formatDate(response.data.time * 1000);\n  iconElement.setAttribute(\n    \"src\",\n    `https://shecodes-assets.s3.amazonaws.com/api/weather/icons/${response.data.condition.icon}.png`\n  );\n  iconElement.setAttribute(\"icon\", response.data.condition.icon);\n\n  getForecast(response.data.coordinates);\n}\n\nfunction search(city) {\n  let apiKey = \"5035a72ff289e3220e2bo711c747t0f5\";\n  let apiUrl = `https://api.shecodes.io/weather/v1/current?query=${city}&key=5035a72ff289e3220e2bo711c747t0f5&units=metric`;\n  axios.get(apiUrl).then(displayTemperature);\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  let cityInputElement = document.querySelector(\"#city-input\");\n  search(cityInputElement.value);\n}\n\nfunction displayFahrenheitTemperature(event) {\n  event.preventDefault();\n  let temperatureElement = document.querySelector(\"#temperature\");\n  let fahrenheitTemperature = ((celsiusTemperature * 9) / 5) * 32;\n  temperatureElement.innerHTML = Math.round(fahrenheitTemperature);\n}\n\nfunction displayCelsiusTemperature(event) {\n  event.preventDefault();\n  let temperatureElement = document.querySelector(\"#temperature\");\n  temperatureElement.innerHTML = Math.round(celsiusTemperature);\n}\n\nlet celsiusTemperature = null;\n\nlet form = document.querySelector(\"#search-form\");\nform.addEventListener(\"submit\", handleSubmit);\n\nlet fahrenheitlink = document.querySelector(\"#fahrenheit-link\");\nfahrenheitlink.addEventListener(\"click\", displayFahrenheitTemperature);\n\nlet celsiuslink = document.querySelector(\"#celsius-link\");\ncelsiuslink.addEventListener(\"click\", displayCelsiusTemperature);\n\nsearch(\"Durban\");\n"]}