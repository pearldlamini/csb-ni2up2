{"version":3,"sources":["src/index.js"],"names":["formatDate","timestamp","date","Date","hours","getHours","concat","minutes","getMinutes","day","getDay","displayForecast","forecastElement","document","querySelector","forecastHTML","displayTemperature","response","temperatureElement","cityElement","descriptionElement","humidityElement","windElement","dateElement","iconElement","celsiusTemperature","data","temperature","current","innerHTML","Math","round","city","condition","description","humidity","wind","speed","time","setAttribute","icon","search","apiUrl","axios","get","then","forEach","addEventListener","event","preventDefault","value","fahrenheitTemperature"],"mappings":";AAAA,SAASA,EAAWC,GAClB,IAAIC,EAAO,IAAIC,KAAKF,GAChBG,EAAQF,EAAKG,WACbD,EAAQ,KACVA,EAAKE,IAAAA,OAAOF,IAEd,IAAIG,EAAUL,EAAKM,aACfD,EAAU,KACZA,EAAOD,IAAAA,OAAOC,IAEhB,IAWIE,EAXO,CACT,SACA,SACA,UACA,YACA,WACA,SACA,WACA,UAGaP,EAAKQ,UACpB,MAAAJ,GAAAA,OAAUG,EAAGH,KAAAA,OAAIF,EAAKE,KAAAA,OAAIC,GAG5B,SAASI,IACP,IAAIC,EAAkBC,SAASC,cAAc,aACzCC,EAAkC,oBA2BtC,SAASC,EAAmBC,GAC1B,IAAIC,EAAqBL,SAASC,cAAc,gBAC5CK,EAAcN,SAASC,cAAc,SACrCM,EAAqBP,SAASC,cAAc,gBAC5CO,EAAkBR,SAASC,cAAc,aACzCQ,EAAcT,SAASC,cAAc,SACrCS,EAAcV,SAASC,cAAc,SACrCU,EAAcX,SAASC,cAAc,SAEzCW,EAAqBR,EAASS,KAAKC,YAAYC,QAC/CV,EAAmBW,UAAYC,KAAKC,MAClCd,EAASS,KAAKC,YAAYC,SAE5BT,EAAYU,UAAYZ,EAASS,KAAKM,KACtCZ,EAAmBS,UAAYZ,EAASS,KAAKO,UAAUC,YACvDb,EAAgBQ,UAAYZ,EAASS,KAAKC,YAAYQ,SACtDb,EAAYO,UAAYC,KAAKC,MAAMd,EAASS,KAAKU,KAAKC,OACtDd,EAAYM,UAAY7B,EAAgC,IAArBiB,EAASS,KAAKY,MACjDd,EAAYe,aACV,MAAKjC,8DAAAA,OACyDW,EAASS,KAAKO,UAAUO,KACxF,SACAhB,EAAYe,aAAa,OAAQtB,EAASS,KAAKO,UAAUO,MAG3D,SAASC,EAAOT,GACd,IACIU,EAAMpC,oDAAAA,OAAuD0B,EAAwD,sDACzHW,MAAMC,IAAIF,GAAQG,KAAK7B,GAtDd,CAAC,MAAO,MAAO,MAAO,OAC5B8B,QAAQ,SAAUrC,GACrBM,GACcT,uEAAAA,OAGwBG,EAelC,6XAENM,GAAsC,SACtCH,EAAgBiB,UAAYd,EAoD5B,IAAIU,EAAqB,KAEdZ,SAASC,cAAc,gBAC7BiC,iBAAiB,SAtBtB,SAAsBC,GACpBA,EAAMC,iBAENR,EADuB5B,SAASC,cAAc,eACtBoC,SAqBLrC,SAASC,cAAc,oBAC7BiC,iBAAiB,QAnBhC,SAAsCC,GACpCA,EAAMC,iBACN,IAAI/B,EAAqBL,SAASC,cAAc,gBAC5CqC,EAA+C,EAArB1B,EAA0B,EAAK,GAC7DP,EAAmBW,UAAYC,KAAKC,MAAMoB,KAiB1BtC,SAASC,cAAc,iBAC7BiC,iBAAiB,QAf7B,SAAmCC,GACjCA,EAAMC,iBACmBpC,SAASC,cAAc,gBAC7Be,UAAYC,KAAKC,MAAMN,KAc5CgB,EAAO,UAET9B","file":"src.cb1df823.js","sourceRoot":"..","sourcesContent":["function formatDate(timestamp) {\n  let date = new Date(timestamp);\n  let hours = date.getHours();\n  if (hours < 10) {\n    hours = `0${hours}`;\n  }\n  let minutes = date.getMinutes();\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n  let days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n    \"Sunday\"\n  ];\n\n  let day = days[date.getDay()];\n  return `${day} ${hours} ${minutes}`;\n}\n\nfunction displayForecast() {\n  let forecastElement = document.querySelector(\"#forecast\");\n  let forecastHTML = `<div class=\"row\">`;\n  let days = [\"Fri\", \"Sat\", \"Sun\", \"Mon\"];\n  days.forEach(function (day) {\n    forecastHTML =\n      forecastHTML +\n      ` \n    <div class=\"col-2\">\n     <div class=\"weather-forecast-date\">${day}\n     </div>\n     <img \n     src=\"https://ssl.gstatic.com/onebox/weather/64/sunny.png\"\n     alt=\"\"\n     width=\"36\"\n     />\n     <div class=\"weather-forecast-temperature\">\n       <span class=\"weather-forecast-temperature-max\"> 18° </\n       span>\n       <span class=\"weather-forecast-temperature-min\"> 13° </\n       span>\n         </div>\n        </div>\n\n       `;\n  });\n  forecastHTML = forecastHTML + `</div>`;\n  forecastElement.innerHTML = forecastHTML;\n\n  function displayTemperature(response) {\n    let temperatureElement = document.querySelector(\"#temperature\");\n    let cityElement = document.querySelector(\"#city\");\n    let descriptionElement = document.querySelector(\"#description\");\n    let humidityElement = document.querySelector(\"#humidity\");\n    let windElement = document.querySelector(\"#wind\");\n    let dateElement = document.querySelector(\"#date\");\n    let iconElement = document.querySelector(\"#icon\");\n\n    celsiusTemperature = response.data.temperature.current;\n    temperatureElement.innerHTML = Math.round(\n      response.data.temperature.current\n    );\n    cityElement.innerHTML = response.data.city;\n    descriptionElement.innerHTML = response.data.condition.description;\n    humidityElement.innerHTML = response.data.temperature.humidity;\n    windElement.innerHTML = Math.round(response.data.wind.speed);\n    dateElement.innerHTML = formatDate(response.data.time * 1000);\n    iconElement.setAttribute(\n      \"src\",\n      `https://shecodes-assets.s3.amazonaws.com/api/weather/icons/${response.data.condition.icon}.png`\n    );\n    iconElement.setAttribute(\"icon\", response.data.condition.icon);\n  }\n\n  function search(city) {\n    let apiKey = \"5035a72ff289e3220e2bo711c747t0f5\";\n    let apiUrl = `https://api.shecodes.io/weather/v1/current?query=${city}&key=5035a72ff289e3220e2bo711c747t0f5&units=metric`;\n    axios.get(apiUrl).then(displayTemperature);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    let cityInputElement = document.querySelector(\"#city-input\");\n    search(cityInputElement.value);\n  }\n\n  function displayFahrenheitTemperature(event) {\n    event.preventDefault();\n    let temperatureElement = document.querySelector(\"#temperature\");\n    let fahrenheitTemperature = ((celsiusTemperature * 9) / 5) * 32;\n    temperatureElement.innerHTML = Math.round(fahrenheitTemperature);\n  }\n\n  function displayCelsiusTemperature(event) {\n    event.preventDefault();\n    let temperatureElement = document.querySelector(\"#temperature\");\n    temperatureElement.innerHTML = Math.round(celsiusTemperature);\n  }\n\n  let celsiusTemperature = null;\n\n  let form = document.querySelector(\"#search-form\");\n  form.addEventListener(\"submit\", handleSubmit);\n\n  let fahrenheitlink = document.querySelector(\"#fahrenheit-link\");\n  fahrenheitlink.addEventListener(\"click\", displayFahrenheitTemperature);\n\n  let celsiuslink = document.querySelector(\"#celsius-link\");\n  celsiuslink.addEventListener(\"click\", displayCelsiusTemperature);\n\n  search(\"Durban\");\n}\ndisplayForecast();\n"]}